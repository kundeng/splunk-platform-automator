---
# This playbook manages the /etc/hosts file for all hosts
#
# NOTE: This is a fallback mechanism for when Terraform is not used to manage the infrastructure.
# The primary method for managing hosts is through Terraform, which generates the inventory/hosts file.
# This fallback is useful in scenarios where:
# 1. You're working with existing infrastructure not managed by Terraform
# 2. You need to manually specify host mappings
# 3. You're running Ansible independently of the Terraform workflow

- name: remove vagrant-hostmanager entries
  tags:
    - common
    - hosts
  blockinfile:
    path: /etc/hosts
    state: absent
    marker: "## {mark}"
    marker_begin: "vagrant-hostmanager-start"
    marker_end: "vagrant-hostmanager-end"
  become: yes
  become_user: root

- name: Check if manual hosts mapping file exists
  stat:
    path: "{{ playbook_dir }}/../config/manual_hosts_mapping.txt"
  register: hosts_file_stat

- name: Load manual hosts entries from file
  set_fact:
    splunk_hosts_entries: "{{ lookup('file', hosts_file_stat.stat.path) }}"
  when: 
    - splunk_hosts_entries is not defined or not splunk_hosts_entries
    - hosts_file_stat.stat.exists

- name: add splunk hosts to /etc/hosts
  tags:
    - common
    - hosts
  blockinfile:
    path: /etc/hosts
    block: |
      {{ splunk_hosts_entries | default('', true) }}
    marker: "# {mark} SPLUNKENIZER MANAGED BLOCK (manual host mappings)"
  become: yes
  become_user: root
  when: splunk_hosts_entries is defined and splunk_hosts_entries
